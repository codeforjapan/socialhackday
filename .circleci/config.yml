# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  deploy:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.6.8-browsers
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-gem-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-gem-{{ checksum "package-lock.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            sudo apt-get update -yqqq
            npm install
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install awscli --upgrade

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-gem-{{ checksum "Gemfile.lock" }}

      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-gem-{{ checksum "package-lock.json" }}

      # Build
      - run:
          name: build phase
          command: |
            bundle exec middleman build --environment="production" --build-dir=public --clean

      # Clear Cloudfront save_cache
      - run:
          name: clear Cloudfront cache
          command: |
            aws configure set preview.cloudfront true
            aws s3 sync --sse --delete public s3://$AWS_BUCKET/
            aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION_ID --paths '/*'
          environment:
            CF_DISTRIBUTION_ID: E2MMTLBMXPAMW5

workflows:
  version: 2
  build-deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: master
